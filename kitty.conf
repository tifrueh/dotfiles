# The enabled window layouts. A comma separated list of layout names. The
# special value all means all layouts. The first listed layout will be used as
# the startup layout. Default configuration is all layouts in alphabetical
# order. See https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.enabled_layouts.
enabled_layouts	tall, grid, stack

# The window padding (in pts) (blank area between the text and the window
# border). A single value sets all four sides. Two values set the vertical and
# horizontal sides. Three values set top, horizontal and bottom. Four values
# set top, right, bottom and left.
window_padding_width 5

# The tab bar style. See
# https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.tab_bar_style.
tab_bar_style powerline

# The powerline separator style between tabs in the tab bar when using
# powerline as the tab_bar_style, can be one of: angled, slanted, round.
tab_powerline_style slanted

# On left click: First check for a selection and if one exists do nothing. Then
# check for a link under the mouse cursor and if one exists, click it.
mouse_map left click ungrabbed mouse_handle_click selection link

# The color of the kitty window’s titlebar on macOS. A value of system means to
# use the default system color, light or dark can also be used to set it
# explicitly. A value of background means to use the background color of the
# currently active window and finally you can use an arbitrary color, such as
# #12af59 or red. WARNING: This option works by using a hack when arbitrary
# color (or background) is configured, as there is no proper Cocoa API for it.
# It sets the background color of the entire window and makes the titlebar
# transparent. As such it is incompatible with background_opacity. If you want
# to use both, you are probably better off just hiding the titlebar with
# hide_window_decorations.
macos_titlebar_color background

# Use the macOS traditional full-screen transition, that is faster, but less
# pretty.
macos_traditional_fullscreen yes

# A template to render the tab title. The default just renders the title with
# optional symbols for bell and activity. If you wish to include the tab-index
# as well, use something like: {index}:{title}. Useful if you have shortcuts
# mapped for goto_tab N. If you prefer to see the index as a superscript, use
# {sup.index}. All data available is:
#
# title
#       The current tab title.
#
# index
#       The tab index usable with goto_tab N shortcuts.
#
# layout_name
#       The current layout name.
#
# num_windows
#       The number of windows in the tab.
#
# num_window_groups
#       The number of window groups (a window group is a window and all of its
#       overlay windows) in the tab.
#
# tab.active_wd
#       The working directory of the currently active window in the tab
#       (expensive, requires syscall). Use active_oldest_wd to get the
#       directory of the oldest foreground process rather than the newest.
#
# tab.active_exe
#       The name of the executable running in the foreground of the currently
#       active window in the tab (expensive, requires syscall). Use
#       active_oldest_exe for the oldest foreground process.
#
# max_title_length
#       The maximum title length available.
#
# keyboard_mode
#       The name of the current keyboard mode or the empty string if no
#       keyboard mode is active.
#
# Note that formatting is done by Python’s string formatting machinery, so you
# can use, for instance, {layout_name[:2].upper()} to show only the first two
# letters of the layout name, upper-cased. If you want to style the text, you
# can use styling directives, for example:
# {fmt.fg.red}red{fmt.fg.tab}normal{fmt.bg._00FF00}greenbg{fmt.bg.tab}.
# Similarly, for bold and italic:
# {fmt.bold}bold{fmt.nobold}normal{fmt.italic}italic{fmt.noitalic}. Note that
# for backward compatibility, if {bell_symbol} or {activity_symbol} are not
# present in the template, they are prepended to it.
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{index}"

# Always create new tab with current working directory.
map ctrl+shift+alt+t new_tab_with_cwd

# Include the onehalfdark color scheme
include onehalfdark.conf

# Include a separate file for font configuration
include fontconfig.conf

# Include a separate file for additional configuration, overriding my default
# one
include override-hook.conf
